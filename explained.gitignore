# So instead of trying to build a possible list of dotted folders and files that is created by editors and tools, we just ignore every dotted folder by default
.*

# Then we build a smaller list of what we what to exclude from ignoring
# This list is smaller normally, since it is only a few special ones:

# First the 2 basic git files
!.gitignore
!.gitkeep

# then a few intentionally dotted but meant to be included files and folders
!.circleci
!.special-1.env
!.special-2.env

# then we can start ignoring special folders and files
# Although most of the time you have control of them, like in this example you can tell the unit testing framework to use a dotted folder for coverage output.
# Of course, there's always some exceptions, but usually just a few ones, so this list can be small
coverage

# So excluding all dotted folder by default combining with a few practices can results a very small and minimalistic .gitignore file, that is easy to read and easy to manage.
# Building a list of possible dotted folders could be a neverending struggle, since every tool and editor can have it's own sets and even the OS can create it's own ones.
# Moreover dotted folders in *nix based OSes means hidden and meant to be excluded folders and files
# And last but not least, it also has the benefit, that the developer can create his own custom files


# The biggest benefit of having all dotted files and folders ignored by default, is that as a developer I can create custom and/or temporary files which are going to be persistent in all situations. Situations like stashing your work, to check if another branch works on your tests, or to copy snippets from other branches. Situations like changing branches because you finished a task and you open a new one. Sitations when you merge the lastest master into your branch. And also protects us from accidentally committing files not meant to be comitted.